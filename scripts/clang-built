#!/bin/bash

GIT_REPO=$JENKINS_HOME/bootable-clang-built-debian
PATCHES=$GIT_REPO/patches

mkdir $1
cd $1
apt-get source $1
if [ -e $PATCHES/${1}_clang.patch ]
then 
	patch -p0 < $PATCHES/${1}_clang.patch
	if [ $? -ne 0 ]
	then
		exit 1
	fi
	cd `ls -l | grep ^d | head -n1 | awk '{print $9}'`
	if [ $2 = "special" ]
	then 
		sudo pdebuild --buildresult $WORKSPACE --use-pdebuild-internal -- --basetgz /var/cache/pbuilder/base-sid-normal-amd64.tgz
	else
		sudo pdebuild --buildresult $WORKSPACE --use-pdebuild-internal -- --basetgz /var/cache/pbuilder/base-sid-clang-amd64.tgz
	fi
else
	if [ $2 = "special" ]
	then
		sudo pbuilder --build  --buildresult $WORKSPACE --basetgz /var/cache/pbuilder/base-sid-normal-amd64.tgz *dsc
	else
		sudo pbuilder --build  --buildresult $WORKSPACE --basetgz /var/cache/pbuilder/base-sid-clang-amd64.tgz *dsc
	fi
fi
RES=$?
sudo rm -r $WORKSPACE/$1
if [ $1 = "gcc-5" ]
then
	cd $WORKSPACE
	/usr/bin/gcc-built-download gcc-5-base
	/usr/bin/gcc-built-download libgcc1
	/usr/bin/gcc-built-download libstdc++6
	exit 0
elif [ $1 = "glibc" ]
then 
	cd $WORKSPACE
	/usr/bin/gcc-built-download libc-bin
	/usr/bin/gcc-built-download libc6
	/usr/bin/gcc-built-download locales
	/usr/bin/gcc-built-download multiarch-support 
	exit 0
fi
exit $RES
